#!/bin/bash -eux

function close_bbl_ssh_connection() {
  # Kill all ssh connections on exit.
  # This is needed so that tasks using bbl print-env in a credhub environment
  # don't hang after the script is finished.
  pkill ssh || true
}

function setup_bosh_env_vars() {
  set +ux
  pushd env-repo/"${BBL_STATE_DIR}"
    eval "$(bbl print-env)"
  popd
  set -ux
}

function login_to_credhub() {
  set +x
  echo "Connecting to ${CREDHUB_SERVER}"
  export https_proxy=${BOSH_ALL_PROXY}
  credhub api --server ${CREDHUB_SERVER} --ca-cert=uaa.cert --ca-cert=credhub.cert
  credhub login -u ${CREDHUB_USER} -p ${CREDHUB_PASSWORD}
  set -x
}

function get_terraform_outputs() {
  VAR_STORE=env-repo/${BBL_STATE_DIR}/vars/director-vars-store.yml
  STATE=env-repo/${BBL_STATE_DIR}/vars/terraform.tfstate
  bosh int ${VAR_STORE} --path /credhub_tls/certificate > credhub.cert
  bosh int ${VAR_STORE} --path /uaa_ssl/certificate > uaa.cert
  
  set +x
  CF_HOST=$(terraform output -state=${STATE} cf_db_host)
  UAA_PASSWORD=$(terraform output -state=${STATE} uaa-password)
  BBS_PASSWORD=$(terraform output -state=${STATE} bbs-password)
  CC_PASSWORD=$(terraform output -state=${STATE} cc-password)
  POLICYSERVER_PASSWORD=$(terraform output -state=${STATE} policy_server-password)
  ROUTINGAPI_PASSWORD=$(terraform output -state=${STATE} routing_api-password)
  SILKCONTROLLER_PASSWORD=$(terraform output -state=${STATE} silk_controller-password)
  LOCKET_PASSWORD=$(terraform output -state=${STATE} locket-password)
  set -x
}

function set_credhub_config() {
  set +x
  credhub set -t value -n /bosh-${ENV}/cf/external_uaa_database_address -v "${CF_HOST}" > /dev/null
  credhub set -t password -n /bosh-${ENV}/cf/external_uaa_database_password -w "${UAA_PASSWORD}" > /dev/null
  credhub set -t value -n /bosh-${ENV}/cf/external_bbs_database_address -v "${CF_HOST}" > /dev/null
  credhub set -t password -n /bosh-${ENV}/cf/external_bbs_database_password -w "${BBS_PASSWORD}" > /dev/null
  credhub set -t value -n /bosh-${ENV}/cf/external_cc_database_address -v "${CF_HOST}" > /dev/null
  credhub set -t password -n /bosh-${ENV}/cf/external_cc_database_password -w "${CC_PASSWORD}" > /dev/null
  credhub set -t value -n /bosh-${ENV}/cf/external_routing_api_database_address -v "${CF_HOST}" > /dev/null
  credhub set -t password -n /bosh-${ENV}/cf/external_routing_api_database_password -w "${ROUTINGAPI_PASSWORD}" > /dev/null
  credhub set -t value -n /bosh-${ENV}/cf/external_policy_server_database_address -v "${CF_HOST}" > /dev/null
  credhub set -t password -n /bosh-${ENV}/cf/external_policy_server_database_password -w "${POLICYSERVER_PASSWORD}" > /dev/null
  credhub set -t value -n /bosh-${ENV}/cf/external_silk_controller_database_address -v "${CF_HOST}" > /dev/null
  credhub set -t password -n /bosh-${ENV}/cf/external_silk_controller_database_password -w "${SILKCONTROLLER_PASSWORD}" > /dev/null
  credhub set -t value -n /bosh-${ENV}/cf/external_locket_database_address -v "${CF_HOST}" > /dev/null
  credhub set -t password -n /bosh-${ENV}/cf/external_locket_database_password -w "${LOCKET_PASSWORD}" > /dev/null

  credhub set -t password -n /bosh-${ENV}/cf/blobstore_access_key_id -w "${BLOBSTORE_ACCESS_KEY_ID}" > /dev/null
  credhub set -t password -n /bosh-${ENV}/cf/blobstore_secret_access_key -w "${BLOBSTORE_SECRET_ACCESS_KEY}" > /dev/null
  set -x

  if [ $DEBUG ]; then
    credhub find
  fi
}

trap close_bbl_ssh_connection EXIT

setup_bosh_env_vars

get_terraform_outputs
login_to_credhub
set_credhub_config

